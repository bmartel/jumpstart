version: '3.6'

services:
  app:
    build:
      context: .
    environment:
      RAILS_ENV: production
      RAILS_LOG_TO_STDOUT: 1
      PORT: ${APP_PORT}
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      REDIS_URL: ${REDIS_URL}
    ports:
      - ${APP_PORT}
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  web:
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    environment:
      APP_NAME: ${APP_NAME}
      APP_DOMAIN: ${APP_DOMAIN}
      APP_PATH: ${APP_PATH}
      APP_PORT: ${APP_PORT}
      APP_ENV: production
      CERTBOT_EMAIL: ${CERTBOT_EMAIL}
    ports:
      - 80:80
      - 443:443
    depends_on:
      - app
    volumes:
      - app_data:/app/public
    restart: unless-stopped

  worker:
    build:
      context: .
    command: bundle exec sidekiq
    environment:
      RAILS_ENV: production
      RAILS_LOG_TO_STDOUT: 1
      PORT: 3001
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      REDIS_URL: ${REDIS_URL}
    depends_on:
      - app
    restart: unless-stopped

volumes:
  app_data:
